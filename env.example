# ==============================================
# Rocket.Chat Environment Configuration
# ==============================================
# Copy this file to .env and configure with your actual values
# 
# SECURITY WARNING: Never commit .env files to version control!
# This file contains sensitive database credentials.

# ==============================================
# MongoDB Configuration
# ==============================================
# MongoDB connection string (required)
# Format: mongodb+srv://username:password@cluster.mongodb.net/
# Note: Do NOT include database name in the URL - it will cause runtime errors
MONGO_URL=mongodb+srv://username:password@cluster.mongodb.net/

# MongoDB Oplog URL (required for real-time features)
# Usually the same as MONGO_URL
MONGO_OPLOG_URL=mongodb+srv://username:password@cluster.mongodb.net/

# ==============================================
# Application Configuration
# ==============================================
# Root URL where your Rocket.Chat will be accessible
# For local development: http://localhost:8080
# For production: https://your-domain.com
ROOT_URL=http://localhost:8080

# Port for the application (optional - Cloud Run will override)
# Default: 3000
PORT=3000

# Deployment method identifier
DEPLOY_METHOD=docker

# ==============================================
# Optional Configuration
# ==============================================
# Uncomment and configure as needed

# Site URL (if different from ROOT_URL)
# SITE_URL=https://your-domain.com

# Admin user configuration (for initial setup)
# ADMIN_USERNAME=admin
# ADMIN_PASS=your-secure-password
# ADMIN_EMAIL=admin@your-domain.com

# SMTP Email Configuration
# MAIL_URL=smtps://username:password@smtp.gmail.com:465
# MAIL_FROM=noreply@your-domain.com

# File upload settings
# UPLOAD_FOLDER=uploads/

# ==============================================
# Production Recommendations
# ==============================================
# 1. Use strong, unique passwords for MongoDB
# 2. Enable MongoDB authentication and SSL
# 3. Configure proper firewall rules
# 4. Use HTTPS for ROOT_URL in production
# 5. Consider using Google Secret Manager for sensitive values
